1. Crie um banco de dados chamado academico no MongoDB.
-- Adaptar para NoSQL
CREATE TABLE aluno(
  id_aluno INT NOT NULL,
  nome_aluno VARCHAR(100) NOT NULL,
  PRIMARY KEY(id_aluno)
);

db.createCollection("aluno", {
     validator: {
             $jsonSchema : {
                     bsonType: "object", 
                     required: [ "id_aluno","nome_aluno"],
                     properties: {
      "id_aluno" : { bsonType: "objectId" }
      "nome_aluno" : { bsonType: "string"maxLength: 100 },             
                     }
            }
     }
})

CREATE TABLE disciplina(
  id_disciplina INT NOT NULL,
  nome_disciplina VARCHAR(100) NOT NULL,
  carga_horaria INT CHECK(carga_horaria > 0),
  PRIMARY KEY(id_disciplina)
);

db.createCollection("disciplina", {
     validator: {
             $jsonSchema : {
                     bsonType: "object", 
                     required: [ "id_disciplina","nome_disciplina"],
                     properties: {
      "id_disciplina" : { bsonType: "objectId" },
      "nome_disciplina" : { bsonType: "string"maxLength: 100 },          
      "carga_horaria" : { bsonType: "int" minimum: 0}, 
                     }
            }
     }
})

CREATE TABLE professor(
  id_professor INT NOT NULL,
  nome_professor VARCHAR(100) NOT NULL,
  titulacao_professor VARCHAR(50) NOT NULL,
  PRIMARY KEY(id_professor)
);

db.createCollection("professor", {
     validator: {
             $jsonSchema : {
                     bsonType: "object", 
                     required: [ "id_professor","nome_professor","titulacao_professor"],
                     properties: {
      "id_professor" : { bsonType: "objectId" },
      "nome_professor" : { bsonType: "string"maxLength: 100 },          
      "titulacao_professor" : { bsonType: "string"maxLength: 50 }, 
                     }
            }
     }
})

CREATE TABLE turma(
  id_turma INT NOT NULL,
  num_periodo INT NOT NULL,
  id_professor INT,
  id_disciplina INT,
  horario_aula VARCHAR(10),
  num_sala VARCHAR(10),
  PRIMARY KEY(id_turma),
  FOREIGN KEY(id_professor) REFERENCES professor(id_professor) ON DELETE CASCADE,
  FOREIGN KEY(id_disciplina) REFERENCES disciplina(id_disciplina)
);

db.createCollection("turma", {
     validator: {
             $jsonSchema : {
                     bsonType: "object", 
                     required: [ "id_turma","num_periodo"],
                     properties: {
      "id_turma" : { bsonType: "objectId" },
      "num_periodo" : { bsonType: "int" maxLength: 50 },
      "id_professor" : { bsonType: "objectId" },
      "id_disciplina" : { bsonType: "objectId" },
      "horario_aula" : { bsonType: "string" maxLength: 10},
      "num_sala" : { bsonType: "string" maxLength: 10 },          
                     }
            }
     }
})

CREATE TABLE historico(
  id_historico INT NOT NULL,
  id_turma INT NOT NULL,
  id_aluno INT NOT NULL,
  num_faltas SMALLINT,
  media_final DECIMAL(3,1),
  PRIMARY KEY(id_historico),
  FOREIGN KEY(id_turma) REFERENCES turma(id_turma) ON DELETE CASCADE,
  FOREIGN KEY(id_aluno) REFERENCES aluno(id_aluno)
);

db.createCollection("historico", {
     validator: {
             $jsonSchema : {
                     bsonType: "object", 
                     required: [ "id_historico ","id_turma","id_aluno"],
                     properties: {
      "id_historico" : { bsonType: "objectId" },               
      "id_turma" : { bsonType: "objectId" },
      "id_aluno" : { bsonType: "objectId" },
      "num_faltas" : { bsonType: "int"},
      "media_final" : { bsonType: "int" maxLength: 3,1},          
                     }
            }
     }
})

2. Elabore os comandos JS em um banco de dados.

b) Insira um registro na tabela aluno preechendo somente a coluna id_aluno com o valor 1. Qual foi o resultado?

> db.alunos.insert({
...  id_aluno: 1,
... })
WriteResult({ "nInserted" : 1 })
>

c) Insira os seguintes registros na tabela aluno.

id_aluno        nome_aluno
1               JOSE
2               MARIA
3               BRUNO
4               CARLA
5               PEDRO

> db.aluno.insert({_id_aluno: 1, "nome_aluno" : "Jose"})
WriteResult({ "nInserted" : 1 })
> db.aluno.find()
{ "_id_aluno" : 1, "nome_aluno" : "Jose" }     

> db.aluno.insert({_id_aluno: 2, "nome_aluno" : "MARIA"})
WriteResult({ "nInserted" : 1 })
> db.aluno.find()
{ "_id_aluno" : 1, "nome_aluno" : "Jose" }
{ "_id_aluno" : 2, "nome_aluno" : "MARIA" }

>  db.aluno.insert({_id_aluno: 3, "nome_aluno" : "BRUNO"})
WriteResult({ "nInserted" : 1 })
> db.aluno.find()
{ "_id_aluno" : 1, "nome_aluno" : "Jose" }
{ "_id_aluno" : 2, "nome_aluno" : "MARIA" }
{ "_id_aluno" : 3, "nome_aluno" : "BRUNO" }

>  db.aluno.insert({_id_aluno: 4, "nome_aluno" : "CARLA"})
WriteResult({ "nInserted" : 1 })
> db.aluno.find()
{ "_id_aluno" : 1, "nome_aluno" : "Jose" }
{ "_id_aluno" : 2, "nome_aluno" : "MARIA" }
{ "_id_aluno" : 3, "nome_aluno" : "BRUNO" }
{ "_id_aluno" : 4, "nome_aluno" : "CARLA" }

>  db.aluno.insert({_id_aluno: 5, "nome_aluno" : "PEDRO"})
WriteResult({ "nInserted" : 1 })
> db.aluno.find()
{ "_id_aluno" : 1, "nome_aluno" : "Jose" }
{ "_id_aluno" : 2, "nome_aluno" : "MARIA" }
{ "_id_aluno" : 3, "nome_aluno" : "BRUNO" }
{ "_id_aluno" : 4, "nome_aluno" : "CARLA" }
{ "_id_aluno" : 5, "nome_aluno" : "PEDRO" }

d) Insira um registro na tabela disciplina com os valores 1 para id_disciplina, BANCO DE DADOS I para nome_disciplina e -1 para carga_horaria. Qual foi o resultado?

e) Insira os seguintes registros na tabela disciplina.

id_disciplina    nome_disciplina     carga_horaria
1                BANCO DE DADOS I    60
2                BANCO DE DADOS II   60

f) Insira os seguintes resgistros na tabela professor.
id_professor   nome_professor
1              LETICIA
2              JOSE REGINALDO

g) Insira um registro na tabela turma com os valores 1 para id_turma, 20192 para num_periodo. Qual foi o resultado?

h) Insira um registro na tabela turma com os valores 1 para id_turma, 20201 para num_periodo. Qual foi o resultado?

i) Insira um registro na tabela turma com os valores 2 para id_turma, 20201 para num_periodo e 3 para id_professor. Qual foi o resultado?

j) Insira os registros na tabela turma.

id_turma   num_periodo   id_professor  id_disciplina
3          20201         1             1
4          20202         2             2

k) Insira os registros na tabela historico.

id_historico    id_turma   id_aluno
1               1          1
2               1          2
3               1          3
4               1          4
5               3          1
6               3          2
7               4          3
8               4          4
	   
l) Altere o nome do aluno JOSE para JOAO.

m) Altere o id_disciplina de BANCO DE DADOS I para o valor 3. Qual foi o resultado?

n) Altere a media_final dos alunos que est√£o na turma de BANCO DE DADOS II para 5.

o) Exclua o aluno PEDRO. Qual foi o resultado?

p) Exclua a disciplina BANCO DE DADOS II. Qual foi o resultado?

q) Exclua o professor JOSE REGINALDO. Qual foi o resultado?

